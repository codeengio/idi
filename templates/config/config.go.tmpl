package config

import (
	"github.com/knadh/koanf/parsers/dotenv"
	"github.com/knadh/koanf/providers/env"
	"github.com/knadh/koanf/providers/file"
	"github.com/knadh/koanf/v2"
	"github.com/rs/zerolog"
)

var k = koanf.New(".")

type AppConfig struct {
	AppPort       int    `koanf:"PORT"`
	DbHost        string `koanf:"DB_HOST"`
	DbPort        int    `koanf:"DB_PORT"`
	DbUser        string `koanf:"DB_USER"`
	DbPassword    string `koanf:"DB_PASSWORD"`
	DbName        string `koanf:"DB_NAME"`
}

func GetAppConfig(configFile string, logger zerolog.Logger) (config *AppConfig, err error) {
	if e := k.Load(file.Provider(configFile), dotenv.Parser()); e != nil {
		logger.Warn().
			Err(e).
			Msgf("failed to load %s config file. proceeding with environment variables", configFile)
	}

	err = k.Load(env.Provider("", ".", func(s string) string {
		return s
	}), nil)
	if err != nil {
		logger.Error().Err(err)
		return nil, err
	}

	err = k.Unmarshal("", &config)
	if err != nil {
		logger.Error().Err(err)
		return nil, err
	}
	logger.Info().Msg("loaded config")
	return
}
